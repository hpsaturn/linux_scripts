#!/usr/bin/env python3
"""
Fixed Firefox cookie exporter - retrieves all cookies including session cookies
Original version: https://gist.github.com/msanders/0715f4a1d64190011d7813e57a2e8ffe
"""

import os
import sys
import sqlite3
import glob
from pathlib import Path


def find_firefox_profiles():
    """Find Firefox profiles in common locations"""
    profiles = []
    
    # Common Firefox profile locations
    search_paths = [
        Path.home() / ".mozilla" / "firefox",
        Path.home() / "snap" / "firefox" / "common" / ".mozilla" / "firefox",
        Path("/home") / "*" / ".mozilla" / "firefox",
    ]
    
    for search_path in search_paths:
        if search_path.exists():
            for profile_dir in search_path.glob("*.default*"):
                if (profile_dir / "cookies.sqlite").exists():
                    profiles.append(str(profile_dir))
    
    return profiles

def export_cookies(profile_path):
    """Export cookies from Firefox profile"""
    db_path = os.path.join(profile_path, "cookies.sqlite")
    
    if not os.path.exists(db_path):
        print(f"Error: cookies.sqlite not found in {profile_path}", file=sys.stderr)
        return False
    
    try:
        # Connect to the database
        conn = sqlite3.connect(f"file:{db_path}?immutable=1", uri=True)
        cursor = conn.cursor()
        
        # Query all cookies
        cursor.execute("""
            SELECT
                host,
                CASE SUBSTR(host, 1, 1) = '.' 
                    WHEN 0 THEN 'FALSE' 
                    ELSE 'TRUE' 
                END,
                path,
                CASE isSecure 
                    WHEN 0 THEN 'FALSE' 
                    ELSE 'TRUE' 
                END,
                expiry,
                name,
                value
            FROM moz_cookies
            ORDER BY host, expiry
        """)
        
        # Print Netscape cookies.txt format header
        print("# HTTP Cookie File")
        print("# This file was generated by %s" % os.path.basename(os.sys.argv[0]))
        print()
        
        # Print all cookies
        for row in cursor.fetchall():
            # Format: domain, flag, path, secure, expiration, name, value
            print("\t".join(str(field) for field in row))
        
        conn.close()
        return True
        
    except sqlite3.Error as e:
        print(f"Database error: {e}", file=sys.stderr)
        return False

def main():
    if len(sys.argv) != 2:
        print("Usage: %s <profile_path> > cookies.txt" % os.path.basename(os.sys.argv[0]))
        print("\nAvailable profiles:")
        profiles = find_firefox_profiles()
        if profiles:
            for profile in profiles:
                print(f"  {profile}")
        else:
            print("  No Firefox profiles found")
        sys.exit(1)
    
    profile_path = sys.argv[1]
    
    if profile_path in ["-h", "--help"]:
        print("Usage: firefox_export_cookies_fixed <profile_path>")
        print("\nThis script exports Firefox cookies in Netscape cookies.txt format")
        print("\nTo find available profiles, run without arguments")
        sys.exit(0)
    
    if not export_cookies(profile_path):
        sys.exit(1)

if __name__ == "__main__":
    main()
