#!/bin/bash
# full and incremental backup script
# Copyright @hpsaturn

# Created 07 February 2000
# Based on a script by Daniel O'Callaghan <danny@freebsd.org>

# REVISIONS
# 20191101 Main refactor, isolated options (for cron)
# 20121219 Autoconfigure via console paramaters
# 20130219 Add help

COMMAND="$1"
COMPUTER="$2"                             # name of this computer
ROOT="$3"                                 # target directory
DIRECTORIES="$4"                          # directoris to backup
SECONDARY="$5"                            # secondary store backup

BACKUPDIR=$ROOT/$COMPUTER               # where to store the backups
TIMEDIR=$ROOT/$COMPUTER/last-full       # where to store time of full backup
TAR=/bin/tar                            # name and locaction of tar
IGNORE=$ROOT/$COMPUTER/ignorefiles      # ignore files

PATH=/usr/local/bin:/usr/bin:/bin
DOW=`date +%a`              		# Day of the week e.g. Mon
DOM=`date +%d`              		# Date of the Month e.g. 27
DM=`date +%d%b`             	  # Date and Month e.g. 27Sep
DATE=`date +%Y%m%d`             # Date format AAAAMMDD

# The full backup command add a full date format to output file
# The full week backup command overwrite the same incremental bkp with a new full bkp.
# Each icremental backup overwrites last weeks incremental backup of the same name.
#
# if NEWER = "", then tar backs up all files in the directories
# otherwise it backs up files newer than the NEWER date. NEWER
# gets it date from the file written on each full bkp.

function showHelp(){
    echo ""
    echo "Usage: backup [Command] source roottarget target [OptionalStorage]"
    echo ""
    echo "Example dual storage: backup full home /bkp /home/user /mnt/samba/bkp" 
    echo "Example simple:       backup full home /bkp /home/user" 
    echo ""
    echo "Example: installing in crontab:"
    echo "00  19  *   *   *   /home/user/bin/backup increm home /bkp /home/user"
    echo "00  20  *   *   0   /home/user/bin/backup week home /bkp /home/user"
    echo ""
    echo "Commands:"
    echo ""
    echo "full: Full backup, output with complete date name file" 
    echo "week: Week full backup, output with day name file"
    echo "increm: Incremental backup respect last full backup (week or full)"
    echo ""
}

function checkdirs () {
  if [ "$COMPUTER" == "" ]; then
    showHelp   
    exit 3
  fi

  if [[ ( "$ROOT" == "" ) || ( "$DIRECTORIES" == "" ) ]]; then
    echo ""
    echo "ERROR: Root backup directory or target directory not found!"
    showHelp
    exit 3
  fi

  if [ ! -d "$ROOT/$COMPUTER" ]; then
    echo -n "CREATING ROOT BACKUP: $ROOT"
    mkdir -p $ROOT/$COMPUTER
    INITBKP=1
    echo " [OK]"
  fi

  if [ ! -d "$TIMEDIR" ]; then
    echo -n "CONFIGURE TIME DIRECTORY: $TIMEDIR"
    mkdir -p $TIMEDIR
    NOW=`date +%d-%b`
    echo $NOW > $TIMEDIR/$COMPUTER-full-date
    echo " [OK]"
  fi

  if [ ! -f "$IGNORE" ]; then
    echo -n "CREATING IGNORE CONFIG FILE: $IGNORE"
    touch $IGNORE
    echo " [OK]"
  fi

  if [ "$SECONDARY" != "" ]; then

    if [ ! -d "$SECONDARY/$COMPUTER" ]; then
      echo -n "CREATING SECONDARY BACKUP: $SECONDARY"
      mkdir -p $SECONDARY/$COMPUTER
      echo " [OK]"
      echo ""
    fi
  fi
}

function runbackup () {
  echo "ignore file path ==> $IGNORE"
  echo "target dir  path ==> $DIRECTORIES"
  $TAR $NEWER -zcf $FILE --exclude-from=$IGNORE $DIRECTORIES

  if [ "$SECONDARY" != "" ]; then
    echo "copy to secondary ==> $SECONDARY/$COMPUTER"
    cp -f $FILE $SECONDARY/$COMPUTER/
  fi
}

function cleanfile () {
  if [ -f $FILE ]; then
    rm $FILE
  fi
}

function updatelastdate () {
  # Update full backup date (/tmp for samba)
  NOW=`date +%d-%b` 
  echo $NOW > /tmp/$COMPUTER-full-date
  mv /tmp/$COMPUTER-full-date $TIMEDIR/
}

# Monthly full backup
function runfullbkp () {
  NEWER=""
  FILE=$BACKUPDIR/bkp_$COMPUTER_$DATE.tar.gz
  echo "Monthly full backup ==> $FILE"
  cleanfile
  runbackup
  updatelastdate
}

# Weekly full backup
function runfullweekbkp () {
  NEWER=""
  FILE=$BACKUPDIR/$COMPUTER-$DOW.tar.gz
  echo "Weekly full backup ==> $FILE"
  cleanfile
  runbackup
  updatelastdate
}

# Make incremental backup - overwrite last weeks
function runincrementalbkp () {
  # Get date of last full backup
  NEWER="--newer `cat $TIMEDIR/$COMPUTER-full-date`"
  FILE=$BACKUPDIR/$COMPUTER-$DOW.tar.gz
  echo "Incremental backup ==> $FILE"
  cleanfile
  runbackup
}

checkdirs

case "$COMMAND" in
  full)
    runfullbkp
    ;;
  week)
    runfullweekbkp
    ;;
  increm)
    runincrementalbkp
    ;;
  *)
    showHelp
    ;;
esac

